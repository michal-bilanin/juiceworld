@using BusinessLayer.DTOs
@model Infrastructure.QueryObjects.FilteredResult<BusinessLayer.DTOs.ProductDto>

@{
    ViewData["Title"] = "Products";
}

<div class="container mt-5">
    <h2>@ViewData["Title"]</h2>

    <form method="get" asp-action="Index" class="form-inline mb-3">
        <div class="form-group mr-2 d-flex flex-row gap-2">
            <input type="text" name="Name" class="form-control" placeholder="Search by name" value="@ViewContext.HttpContext.Request.Query["Name"]" />
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </form>

    <table class="table table-striped">
        <thead>
        <tr>
            <th>Product ID</th>
            <th>Name</th>
            <th>Price</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in Model.Entities)
        {
            <tr>
                <td>@product.Id</td>
                <td>@product.Name</td>
                <td>@product.Price</td>
                <td>
                    <a href="@Url.Action("Edit", "Product", new { id = product.Id })" class="btn btn-info">Edit</a>
                    <form method="post" asp-action="Delete" asp-controller="Product" asp-route-id="@product.Id" class="d-inline" onsubmit="return confirm(`Are you sure you want to delete product: @product.Name`);">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <nav aria-label="Page navigation">
        <ul class="pagination">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new ProductFilterDto{PageIndex = i})">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>
