@using PresentationLayer.Mvc
@model PresentationLayer.Mvc.Models.SearchablesFilterResultViewModel

@{
    ViewData[Constants.Keys.Title] = "Shop";
}

<h2>Tags</h2>
<div class="tag-list">
    @foreach (var tag in Model.Tags.Entities)
    {
        <div class="tag-card" style="color: @tag.ColorHex;">
            <p>@tag.Name</p>
        </div>
    }
</div>
@if (Model.Tags.TotalPages > 1)
{
    <div class="pagination">
        @if (Model.Tags.PageIndex > 1)
        {
            <a href="@Url.Action("Index", new { TagPageIndex = Model.Tags.PageIndex - 1 })">Previous</a>
        }

        @for (int i = 1; i <= Model.Tags.TotalPages; i++)
        {
            <a href="@Url.Action("Index", new { TagPageIndex = i })" class="@(i == Model.Tags.PageIndex ? "active" : "")">@i</a>
        }

        @if (Model.Tags.PageIndex < Model.Tags.TotalPages)
        {
            <a href="@Url.Action("Index", new { TagPageIndex = Model.Tags.PageIndex + 1 })">Next</a>
        }
    </div>
}

<h2 class="section-title">Products</h2>
<div class="product-list">
    @foreach (var product in Model.Products.Entities)
    {
        <div class="product-card">
            <a href="@Url.Action("Details", new { id = product.Id })">
                <div class="product-image">
                    <img src="@(string.IsNullOrEmpty(product.Image) ? "/images/product_placeholder.jpg" : $"data:image/png;base64,{product.Image}")" alt="@product.Name" />
                </div>
                <div class="product-info">
                    <h3>@product.Name</h3>
                    <p>@product.Price.ToString("C")</p>
                    <p>Manufacturer: @product.Manufacturer.Name</p>
                    <div class="product-tags">
                        @foreach (var tag in product.Tags)
                        {
                            <span class="tag-chip" style="background-color: @tag.ColorHex;">@tag.Name</span>
                        }
                    </div>
                </div>
            </a>
        </div>
    }
</div>
@if (Model.Products.TotalPages > 1)
{
    <div class="pagination">
        @if (Model.Products.PageIndex > 1)
        {
            <a href="@Url.Action("Index", new { ProductPageIndex = Model.Products.PageIndex - 1 })">Previous</a>
        }

        @for (int i = 1; i <= Model.Products.TotalPages; i++)
        {
            <a href="@Url.Action("Index", new { ProductPageIndex = i })" class="@(i == Model.Products.PageIndex ? "active" : "")">@i</a>
        }

        @if (Model.Products.PageIndex < Model.Products.TotalPages)
        {
            <a href="@Url.Action("Index", new { ProductPageIndex = Model.Products.PageIndex + 1 })">Next</a>
        }
    </div>
}

<h2 class="section-title">Manufacturers</h2>
<div class="manufacturer-list">
    @foreach (var manufacturer in Model.Manufacturers.Entities)
    {
        <div class="manufacturer-card">
            <p>@manufacturer.Name</p>
        </div>
    }
</div>
@if (Model.Manufacturers.TotalPages > 1)
{
    <div class="pagination">
        @if (Model.Manufacturers.PageIndex > 1)
        {
            <a href="@Url.Action("Index", new { ManufacturerPageIndex = Model.Manufacturers.PageIndex - 1 })">Previous</a>
        }

        @for (int i = 1; i <= Model.Manufacturers.TotalPages; i++)
        {
            <a href="@Url.Action("Index", new { ManufacturerPageIndex = i })" class="@(i == Model.Manufacturers.PageIndex ? "active" : "")">@i</a>
        }

        @if (Model.Manufacturers.PageIndex < Model.Manufacturers.TotalPages)
        {
            <a href="@Url.Action("Index", new { ManufacturerPageIndex = Model.Manufacturers.PageIndex + 1 })">Next</a>
        }
    </div>
}

<style>
    h1, h2 {
        margin-bottom: 20px;
    }
    .section-title {
        margin-top: 40px;
    }
    .tag-list, .manufacturer-list {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }
    .product-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }
    .tag-card, .manufacturer-card {
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 5px 10px;
        transition: background-color 0.3s ease;
        height: 50px;
    }
    .tag-card p, .manufacturer-card p {
        margin: 0;
    }
    .product-card {
        display: flex;
        align-items: center;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        width: 100%;
        text-align: left;
        padding-left: 10px;
        transition: background-color 0.3s ease;
    }
    .product-card:hover, .tag-card:hover, .manufacturer-card:hover {
        background-color: #f0f0f0;
    }
    .product-card a {
        display: flex;
        width: 100%;
        text-decoration: none;
        color: inherit;
    }
    .product-image {
        display: flex;
        align-items: center;
        flex: 0 0 auto;
        width: 100px;
    }
    .product-image img {
        width: 100%;
        height: auto;
        margin-right: 10px;
    }
    .product-info {
        flex: 1 1 auto;
        padding: 10px;
    }
    .product-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        margin-top: 10px;
    }
    .tag-chip {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 15px;
        color: #fff;
        font-size: 0.8em;
    }
    .pagination {
        margin-top: 20px;
        text-align: center;
    }
    .pagination a {
        margin: 0 5px;
        text-decoration: none;
    }
    .pagination a.active {
        font-weight: bold;
    }
</style>
